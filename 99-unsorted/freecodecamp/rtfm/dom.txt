
.
.
The DOM: Style in the Header, Script in the Footer

Maybe you've been told that links to style sheets (CSS) should be included in the header and that links to script (JS) should be included in the footer.
Ever asked yourself why?

If you've ever seen a webpage that loads the text first, then after a bit loads the formatting and style,
you've seen a page that didn't have the links to style and script in the correct places.

This all has to do with how the browser decides it's loaded enough information to display.
There's an event called 'DOMContentLoaded', and once that event happens, whatever is loaded will be displayed.

The DOM will tell the browser it's ready once the HTML is loaded, and sometimes the CSS and JS hasn't caught up.
However, if you place the CSS in the header and the JS in the footer,
you can ensure that all content will be loaded before the DOM triggers the 'DOMContentLoaded' event,
the event that shows the user your content.

The DOM: Style in the Header, Script in the Footer
https://www.youtube.com/watch?v=i1rQi9Maem8


.
.
The DOM: What's the Document Object Model?

The DOM is the browser's internal, progrematic representation of a webpage.
Languages like javascript allow you to modify the DOM, and thus the website without editing the HTML of the page.

Technically, the DOM is an API (application programming interface).
There are many types of APIs, but this particular API interacts with XML and HTML documents.
It's in charge of how those documents are accessed and manipulated.

Really, you can do a lot with the dom, and if you're already scripting in JS and jQuery, you're already doing it.

You can insert new things, elements, or alter style or content for elements that already exist.

This can be done with pure javascript, like:
document.getElementById(id)
element.getElementsByTagName(name)
document.createElement(name)

You can also use libraries like jQuery to simplify, standardize and automate manipulating the DOM, like:
$('#box2').append("This will be added to box2!")

The DOM: What's the Document Object Model?
https://www.youtube.com/watch?v=80Mr2Z6Qikc


.
.
